name: CI/CD

on:
  push:
    branches:
      - main
      - 'feature*'
  pull_request:
    branches:
      - main
      - 'feature*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run a one-line script
        run: echo "Building the project..."
      
      - name: Run tests
        run: echo "Running tests..."

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment: dev
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/feature')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Dev
        run: echo "Deploying to Dev environment..."
        env:
          ENVIRONMENT: dev
          
  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Production
        run: echo "Deploying to Production environment..."
        env:
          ENVIRONMENT: prod

  create-release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Latest Tag
        id: get_tag
        run: |
          # Generate a unique tag based on timestamp or versioning strategy
          TAG_VERSION=$(date +'%Y%m%d%H%M%S')
          echo "TAG_VERSION=v$TAG_VERSION"
          echo "TAG_VERSION=v$TAG_VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Tag
        id: create_tag
        run: |
          # Create a new tag and push it to the repository
          git tag $TAG_VERSION
          git push origin $TAG_VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_VERSION }}
          release_name: Release ${{ env.TAG_VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/movie-phobics-backend.zip
          asset_name: movie-phobics-backend.zip
          asset_content_type: application/zip
