name: Build & Deploy

on:
  push:
    branches:
      - main
      - "feature-*"
  pull_request:
    branches:
      - main
      - "feature-*"
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version to be used"
        required: true
        default: "v1.0.0"
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build-path: ./build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Create build directory and build the project
        run: |
          mkdir -p build
          echo "This is a build artifact" > build/movie-phobics-backend.zip

      - name: List build directory
        run: ls -al ./build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./build/

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

  deploy_dev:
    needs: build
    if: startsWith(github.ref, 'refs/heads/feature-') || github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.release_version)
    runs-on: ubuntu-latest
    concurrency:
      group: dev-deployment
      cancel-in-progress: true
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout specific release tag
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.release_version
        run: |
          git fetch --tags
          git checkout ${{ github.event.inputs.release_version }}

      - name: Install dependencies
        run: npm install

      - name: Deploy to Dev
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npx netlify-cli deploy --alias dev --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN

      - name: Deployment Status
        run: echo "Deployed to Dev environment."

  create_release_version:
    needs: deploy_dev
    if: github.ref == 'refs/heads/main' && success() && github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    concurrency:
      group: create-release-deployment
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag and Check for Changes
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git tag -l "v*" | sort -V | tail -n 1)
          latest_commit=$(git rev-parse HEAD)

          if [ -z "$latest_tag" ]; then
            new_tag="v1.0.0"
          else
            last_tag_commit=$(git rev-list -n 1 "$latest_tag")
            if [ "$latest_commit" != "$last_tag_commit" ]; then
              version=$(echo "$latest_tag" | sed 's/v//')
              IFS='.' read -r major minor patch <<< "$version"
              new_patch=$((patch + 1))
              new_tag="v${major}.${minor}.${new_patch}"
            else
              echo "No new changes to tag."
              exit 0
            fi
          fi

          echo "New tag: $new_tag"
          echo "TAG_VERSION=$new_tag" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Tag
        if: env.TAG_VERSION != 'v1.0.0'
        id: create_tag
        run: |
          git tag $TAG_VERSION
          git push origin $TAG_VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: env.TAG_VERSION != 'v1.0.0'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_VERSION }}
          release_name: ${{ env.TAG_VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_prod:
    needs: create_release_version
    if: github.ref == 'refs/heads/main' && success() || (github.event_name == 'workflow_dispatch' && github.event.inputs.release_version)
    runs-on: ubuntu-latest
    concurrency:
      group: prod-deployment
      cancel-in-progress: true
    environment:
      name: prod
      url: https://moviephobics.netlify.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout specific release tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git fetch --tags
          git checkout ${{ github.event.inputs.release_version }}

      - name: Install dependencies
        run: npm install

      - name: Deploying to Production
        run: echo "Deploying to Production..."

      - name: Deploy to Production
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npx netlify-cli deploy --prod --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN

      - name: Deployed to Production
        run: echo "Deployed to Production..."
